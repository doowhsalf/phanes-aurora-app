{"version":3,"sources":["meteor://ðŸ’»app/packages/percolate:find-from-publication/server.js","meteor://ðŸ’»app/packages/percolate:find-from-publication/utils.js"],"names":["module","export","FindFromPublication","Meteor","link","v","METADATA_COLLECTION","constructId","publish","publicationName","fn","rank","oldAdded","added","bind","oldRemoved","removed","collectionName","documentId","doc","apply","arguments","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,qBAAmB,EAAC,MAAIA;AAAzB,CAAd;AAA6D,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,mBAAJ,EAAwBC,WAAxB;AAAoCP,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAsB;AAACE,qBAAmB,CAACD,CAAD,EAAG;AAACC,uBAAmB,GAACD,CAApB;AAAsB,GAA9C;;AAA+CE,aAAW,CAACF,CAAD,EAAG;AAACE,eAAW,GAACF,CAAZ;AAAc;;AAA5E,CAAtB,EAAoG,CAApG;AAG1J,MAAMH,mBAAmB,GAAG,EAA5B;;AAEPA,mBAAmB,CAACM,OAApB,GAA8B,UAASC,eAAT,EAA0BC,EAA1B,EAA8B;AAC1DP,QAAM,CAACK,OAAP,CAAeC,eAAf,EAAgC,YAAW;AACzC,QAAIE,IAAI,GAAG,CAAX;AACA,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAjB;AACA,UAAMC,UAAU,GAAG,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAnB;;AAEA,SAAKD,KAAL,GAAa,CAACI,cAAD,EAAiBC,UAAjB,EAA6BC,GAA7B,KAAqC;AAChDP,cAAQ,CAACK,cAAD,EAAiBC,UAAjB,EAA6BC,GAA7B,CAAR;AAEAP,cAAQ,CAACN,mBAAD,EAAsBC,WAAW,CAACU,cAAD,EAAiBR,eAAjB,EAAkCS,UAAlC,CAAjC,EAAgF;AACtFD,sBADsF;AAEtFC,kBAFsF;AAGtFT,uBAHsF;AAItF;AACA;AACAE;AANsF,OAAhF,CAAR;AASAA,UAAI,IAAI,CAAR;AACD,KAbD;;AAeA,SAAKK,OAAL,GAAe,CAACC,cAAD,EAAiBC,UAAjB,KAAgC;AAC7C;AACA;AACA;AACA,UAAID,cAAc,KAAKX,mBAAvB,EAA4C;AAE5CS,gBAAU,CAACT,mBAAD,EAAsBC,WAAW,CAACU,cAAD,EAAiBR,eAAjB,EAAkCS,UAAlC,CAAjC,CAAV;AACAH,gBAAU,CAACE,cAAD,EAAiBC,UAAjB,CAAV;AACD,KARD;;AAUA,WAAOR,EAAE,CAACU,KAAH,CAAS,IAAT,EAAeC,SAAf,CAAP;AACD,GA/BD;AAgCD,CAjCD,C;;;;;;;;;;;ACLArB,MAAM,CAACC,MAAP,CAAc;AAACK,qBAAmB,EAAC,MAAIA,mBAAzB;AAA6CC,aAAW,EAAC,MAAIA;AAA7D,CAAd;AAAO,MAAMD,mBAAmB,GAAG,sBAA5B;;AAEA,MAAMC,WAAW,GAAG,CAACU,cAAD,EAAiBR,eAAjB,EAAkCa,EAAlC,eACtBL,cADsB,cACJR,eADI,cACea,EADf,CAApB,C","file":"/packages/percolate_find-from-publication.js","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { METADATA_COLLECTION, constructId } from \"./utils\";\n\nexport const FindFromPublication = {};\n\nFindFromPublication.publish = function(publicationName, fn) {\n  Meteor.publish(publicationName, function() {\n    let rank = 0;\n    const oldAdded = this.added.bind(this);\n    const oldRemoved = this.removed.bind(this);\n\n    this.added = (collectionName, documentId, doc) => {\n      oldAdded(collectionName, documentId, doc);\n\n      oldAdded(METADATA_COLLECTION, constructId(collectionName, publicationName, documentId), {\n        collectionName,\n        documentId,\n        publicationName,\n        // NOTE: this rank is incremented across all collections\n        // probably doesn't matter?\n        rank\n      });\n\n      rank += 1;\n    };\n\n    this.removed = (collectionName, documentId) => {\n      // the only way this can get called is when all documents are removed\n      // from the subscription as it's torn down, we know that the underlying document\n      // will also be removed, and this will pick it up.\n      if (collectionName === METADATA_COLLECTION) return;\n\n      oldRemoved(METADATA_COLLECTION, constructId(collectionName, publicationName, documentId));\n      oldRemoved(collectionName, documentId);\n    };\n\n    return fn.apply(this, arguments);\n  });\n};\n","export const METADATA_COLLECTION = 'subscriptionMetadata';\n\nexport const constructId = (collectionName, publicationName, id) => \n  `${collectionName}-${publicationName}-${id}`;"]}